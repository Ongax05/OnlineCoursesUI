@page "/CourseList"
@using Interfaces
@using Dtos
@using Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization

@attribute [Authorize(Roles = "User,Instructor")]

@inject CourseComponentService CourseComponentService
@inject ICourseServices CourseServices
@inject NavigationManager NavManager

<head>
    <style>
        .card-title{
            background-color: rgb(215, 215, 215);
            border-radius: 15px;
            font-size: large;
        }
        .card{
            max-height: fit-content;
        }
        .course-Image{
            max-width: 150px;
        }
    </style>
</head>


@if (Courses == null)
{
    <div class="spinner"></div>
}
else if (Courses.Count() == 0)
{
    <p>There are no courses to see</p>
}
else
{
    <div class="container">
        <div class="row">
            @foreach (var item in Courses)
            {
                var base64String = Convert.ToBase64String(item.Image);
                var imageSrc = $"data:image/png;base64,{base64String}";

                <a @onclick="() => NavigateToCourseDetails(item.Id)" style="cursor: pointer;">
                    <div class="col-12 mb-3">
                        <div class="card mb-3 p-3">
                            <div class="row g-0">
                                <div class="col-md-4 ">
                                    <img src="@imageSrc"  class="img-fluid rounded-start course-Image" alt="Image">
                                </div>
                                <div class="col-md-8">
                                    <div class="card-body">
                                        <h5 class="card-title text-center">@item.Title</h5>
                                        <p class="card-text text-center">@item.Description</p>
                                        <p class="card-text text-end">
                                            <small class="text-body-secondary me-1">Instructor Id: @item.InstructorId</small>
                                            <small class="text-body-secondary">Average rate: @item.AverageRating</small>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </a>

            }
        </div>
    </div>
}

@code {
    private IEnumerable<CourseDto> Courses;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Courses = await CourseServices.GetCourses();
    }
    private void NavigateToCourseDetails(int courseId)
    {
        CourseComponentService.SetSelectedCourseId(courseId);
        NavManager.NavigateTo($"CourseDetails/{courseId}");
    }
}
