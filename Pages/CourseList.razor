@page "/CourseList"
@using Interfaces
@using Dtos
@using Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization

@attribute [Authorize(Roles = "User,Instructor")]

@inject CourseComponentService CourseComponentService
@inject ICourseServices CourseServices
@inject NavigationManager NavManager

<head>
    <style>
        .container {
            margin-top: 15px;
        }

        .main-row {
            padding: 10px;
        }

        .image {
            max-width: 200px;
            object-fit: contain;
            max-height: 200px;
        }

        .image-col{
            border: 1px solid rgb(184, 184, 184);
            border-bottom-left-radius: 12px;
            border-top-left-radius: 12px;
            padding: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .main-col{
            border: 1px solid rgb(184, 184, 184);
            border-top-right-radius: 12px;
            border-bottom-right-radius: 12px;
        }
        .last-row{
            border-top: 1px solid rgb(184, 184, 184);
        }
        .desc-row{
            border-top: 1px solid rgb(184, 184, 184);
        }


    </style>
</head>


@if (Courses == null)
{
    <div class="spinner"></div>
}
else if (Courses.Count() == 0)
{
    <p>There are no courses to see</p>
}
else
{
    <div class="container">
        @foreach (var item in Courses)
        {
            var base64String = Convert.ToBase64String(item.Image);
            var imageSrc = $"data:image/png;base64,{base64String}";
            <a @onclick="() => NavigateToCourseDetails(item.Id)" style="cursor: pointer;">
                <div class="row d-flex mb-3 main-row align-items-stretch">
                    <div class="col-4 image-col">
                        <img src="@imageSrc" class="image" alt="CourseImage">
                    </div>
                    <div class="col-8 main-col d-flex flex-column">
                        <div class="flex-grow-1">
                            <!-- Título (20%) -->
                            <div class="row title-row h-20">
                                <div class="col-12 align-items-center justify-content-center">
                                    <h2 class="text-center m-1">
                                        @item.Title
                                    </h2>
                                </div>
                            </div>
                            <!-- Descripción (70%) -->
                            <div class="row desc-row h-70">
                                <div class="col-12 align-items-center">
                                    <p>
                                        @item.Description
                                    </p>
                                </div>
                            </div>
                        </div>
                        <!-- Última fila (Restante) -->
                        <div class="row last-row mt-auto">
                            <div class="col-4 d-flex align-items-center">
                                <h6 class="text-start">
                                    Course average: @item.AverageRating
                                </h6>
                            </div>
                            <div class="col-8 d-flex align-items-center" style="border-left: 1px solid rgb(184, 184, 184);">
                                <h6 class="text-end  pe-2">
                                    Profesor id @item.InstructorId
                                </h6>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        }
    </div>
}

@code {
    private IEnumerable<CourseDto> Courses;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Courses = await CourseServices.GetCourses();
    }
    private void NavigateToCourseDetails(int courseId)
    {
        CourseComponentService.SetSelectedCourseId(courseId);
        NavManager.NavigateTo($"CourseDetails/{courseId}");
    }
}
